#!/usr/bin/env python3

import fileinput
import argparse
import sys
import re
try:
    from urllib.parse import urlunparse
except ImportError:
    from urlparse import urlunparse

__version__ = '0.2.0'

rewrite_rules = [('youtube.com','invidio.us'), ('youtu.be/','invidio.us/watch?v='), ('twitter.com', 'nitter.net')]
description_ext = "Private Rewrite transforms YouTube and Twitter links into their more privacy-friendly Invidio.us and Nitter.net versions."

def init_params(has_stdin):
    # Initiate the parser
    parser = argparse.ArgumentParser(description=description_ext)
    parser.add_argument(
        "-c", "--clean", help="Clean/format the output URL", action="store_true")
    # TODO -f for input file
    parser.add_argument(
        "-u", "--url", help="Specify the URL to process")
    parser.add_argument(
        "-V", "--verbose", help="Verbose outputs", action="store_true")
    parser.add_argument(
        "-v", "--version", help="Print the version and exit", action="store_true")

    return parser.parse_args()


def rewrite_url(input_url):
    # TODO need to respect existing params like ?t=
    input_lower = input_url.lower()

    output_url = ''
    for rule_url in rewrite_rules:
        if rule_url[0] in input_lower:
            output_url = re.sub(rule_url[0], rule_url[1], input_url, flags=re.IGNORECASE)
            break

    return output_url


def clean_url(raw_url):
    if "http" in raw_url:
        return raw_url
    else:
        clear_url = urlunparse(("https", raw_url, "", "", "", ""))
        return clear_url


def process_url(args, input_url):
    private_url = rewrite_url(input_url)

    if not private_url:
        if args.verbose:
            print("Cannot process URL '" + input_url + "'")
        return

    if(args.clean):
        private_url = clean_url(private_url)

    print(private_url)

def main():
    has_stdin = not sys.stdin.isatty()
    args = init_params(has_stdin)

    if args.version:
        print(__version__)
        exit(0)

    input_url = ''
    if has_stdin:
        for line in sys.stdin:
            process_url(args, line.rstrip())
    else:
        if not args.url:
            print("Missing URL (\"pvtrwt --help\" for help)")
            return 1
        input_url = args.url
        process_url(args, input_url)

    return 0


if __name__ == '__main__':
    sys.exit(main())
